services:
    back:
        build:
            context: ./Back/Presentation
        ports:
            - 81:81
        volumes:
            - './Back/Presentation/:/app/'
            - './Back/Domain:/Domain/'
        depends_on:
            - db
            - rabbit
            - minio
            - mongo
            - redis
        networks:
            default:
    
    bushandler:
        build:
            context: ./Back/EventBusHandler
        volumes:
            - './Back/EventBusHandler/:/app/'
            - './Back/Domain:/Domain/'
        depends_on:
            - db
            - rabbit
            - mongo
            - minio
        networks:
            default:
    
    front:
        build:
            context: ./Front
        ports:
            - 80:80
        environment:
            - PORT=80
            - WATCHPACK_POLLING=true
        volumes:
            - './Front/:/app/'
        depends_on:
            - back
        networks:
            default:
    
    db:
        image: postgres:14.5
        environment:
            POSTGRES_DB: "testdb"
            POSTGRES_USER: "testuser"
            POSTGRES_PASSWORD: "testpass"
            PGDATA: "/var/lib/postgresql/data/pgdata"
        ports:
            - 5432:5432
        networks:
            default:
    
    rabbit:
        image: rabbitmq:3-management
        ports:
            - 5671:5671
            - 5672:5672
            - 15672:15672
        networks:
            default:
    
    minio:
        image: minio/minio
        command: server --console-address ":9001" /data/
        ports:
            - 9000:9000
            - 9001:9001
        environment:
            MINIO_ROOT_USER: qweqweqwe
            MINIO_ROOT_PASSWORD: qweqweqwe
        networks:
            default:
    
    mongo:
        image: mongo
        ports:
            - 27017:27017
    
    redis:
        image: redis
        ports:
            - 6379:6379
    
    mybook:
        build:
            context: ./MyBook/MyBook
        ports:
            - 82:82
        volumes:
            - './MyBook/MyBook/:/app/'
            - './MyBook/MyBook.DataAccess:/MyBook.DataAccess/'
            - './MyBook/MyBook.Entity:/MyBook.Entity/'
            - './MyBook/MyBook.Services:/MyBook.Services/'
            - './MyBook/PostgresMigrations:/PostgresMigrations/'
        depends_on:
            - db
        networks:
            default: